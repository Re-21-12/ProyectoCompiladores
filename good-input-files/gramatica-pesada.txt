hola {
    contadorA entero = 0;
    sumaA entero = 0;
    sumaA2 entero = 0;
    mensajeA cadena = "Iniciando proceso";
    es_validoA bool = verdadero;
    es_adminA bool = falso;
    
    contadorA2 entero = 0;
    sumaA3 entero = 0;
    sumaA4 entero = 0;
    mensajeA1 cadena = "Iniciando proceso";
    es_validoA2 bool = verdadero;

    mostrar(mensajeA);

    resultadoA1 entero = 6 + 4;
    resultadoA2 entero = 11 - 3;
    resultadoA3 entero = 5 * 8;
    resultadoA4 decimal = 25.0 / 5.0;

    mostrar(resultadoA1);
    mostrar(resultadoA2);
    mostrar(resultadoA3);
    mostrar(resultadoA4);

    totalA entero = resultadoA1 + resultadoA2;
    totalA2 entero = resultadoA3 * resultadoA1;
    mostrar(totalA);

      funcion fibonacci entero(n entero) {
    if (n == 0) {
      retorna 0;
    } else if (n == 1) {
      retorna 1;
    } else {
      retorna fibonacci(n - 1) + fibonacci(n - 2);
    }
  }

  asd entero = 0;
  limite entero = 10;

  while (asd < limite) {
    mostrar(fibonacci(asd));
    asd++;
  }

    if(es_validoA){

        if(es_adminA){
            mostrar("Acceso completo");
        } else {
            mostrar("Acceso restringido");
        }
    }

    for (j entero = 0; j < 10000; j++) {
        sumaA = sumaA + j;
        mostrar(sumaA);
    }

    while(sumaA < 20){
        sumaA++;
        mostrar(sumaA);
    }

    funcion calcularMultiplicacionA entero (c entero, d entero){
        resultadoA entero = c * d;
        mostrar(resultadoA);
        retorna resultadoA;
    }

    funcion calcularPromedioA decimal (totalA decimal, cantidadA decimal){
        promedioA decimal = totalA / cantidadA;
        mostrar(promedioA);
        retorna promedioA;
    }

    calcularMultiplicacionA(5, 7);
    calcularPromedioA(36.6, 6.0);

    funcion esParFuncA bool (numeroA entero){
        if(numeroA > 0){
            retorna verdadero;
        } else {
            retorna falso;
        }
    }

    parA bool = verdadero;
    if(parA){
        mostrar("El numero es par");
    } else {
        mostrar("El numero es impar");
    }

    for (y entero = 0; y < 10000; y++) {
        sumaA2 = sumaA2 + y;
        mostrar(sumaA2);
    }

numeroA21 entero = 31;
numeroA22 entero = 32;
numeroA23 entero = 33;
numeroA24 entero = 34;
numeroA25 entero = 35;

resultadonumeroA entero = 31+32;
resultadonumeroA1 entero = 32-31;
resultadonumeroA2 entero = 33*34;
resultadonumeroA3 entero = 35+35;
resultadonumeroA4 decimal = 40.5 / 2;

    funcion calcularMultiplicacionA2 entero (c1 entero, d2 entero){
        resultadoA entero = c1 * d2;
        mostrar(resultadoA);
        retorna resultadoA;
    }

    funcion calcularPromedioA2 decimal (totalA2 decimal, cantidadA2 decimal){
        promedioA decimal = totalA2 / cantidadA2;
        mostrar(promedioA);
        retorna promedioA;
    }

    funcion calcularPromedioA3 decimal (y numero){
        sumaA32 entero = 0;
        for (j entero = 0; j < 10000; j++) {
            sumaA32 = sumaA32 + j;
            mostrar(sumaA32);
        }
        retorna 0.0;
    }

    calcularPromedioA2(2.23,3.32);

    contadorB entero = 0;
    sumaB entero = 0;
    sumaB2 entero = 0;
    mensajeB cadena = "Ejecutando rutina";
    es_validoB bool = verdadero;
    es_adminB bool = falso;
    
    contadorB2 entero = 0;
    sumaB3 entero = 0;
    sumaB4 entero = 0;
    mensajeB1 cadena = "Ejecutando rutina";
    es_validoB2 bool = verdadero;

    mostrar(mensajeB);

    resultadoB1 entero = 7 + 5;
    resultadoB2 entero = 12 - 4;
    resultadoB3 entero = 6 * 9;
    resultadoB4 decimal = 30.0 / 6.0;

    mostrar(resultadoB1);
    mostrar(resultadoB2);
    mostrar(resultadoB3);
    mostrar(resultadoB4);

    totalB entero = resultadoB1 + resultadoB2;
    totalB2 entero = resultadoB3 * resultadoB1;
    mostrar(totalB);

    if(es_validoB){
        mensajeB cadena = "Cliente autorizado";
        mostrar(mensajeB);

        if(es_adminB){
            mostrar("Privilegios totales");
        } else {
            mostrar("Privilegios basicos");
        }
    }

    for (k entero = 0; k < 19; k++) {
        sumaB = sumaB + k;
        mostrar(sumaB);
    }

    while(sumaB < 20){
        sumaB++;
        mostrar(sumaB);
    }

    funcion calcularMultiplicacionB entero (e entero, f entero){
        resultadoB entero = e * f;
        mostrar(resultadoB);
        retorna resultadoB;
    }

    funcion calcularPromedioB decimal (totalB decimal, cantidadB decimal){
        promedioB decimal = totalB / cantidadB;
        mostrar(promedioB);
        retorna promedioB;
    }

    calcularMultiplicacionB(6, 8);
    calcularPromedioB(37.7, 7.0);

    funcion esParFuncB bool (numeroB entero){
        if(numeroB > 0){
            retorna verdadero;
        } else {
            retorna falso;
        }
    }

    parB bool = verdadero;
    if(parB){
        mostrar("El valor es par");
    } else {
        mostrar("El valor es impar");
    }

    for (z entero = 0; z < 1000; z++) {
        sumaB2 = sumaB2 + z;
        mostrar(sumaB2);
    }

numeroB21 entero = 41;
numeroB22 entero = 42;
numeroB23 entero = 43;
numeroB24 entero = 44;
numeroB25 entero = 45;

resultadonumeroB entero = 41+42;
resultadonumeroB1 entero = 42-41;
resultadonumeroB2 entero = 43*44;
resultadonumeroB3 entero = 45+45;
resultadonumeroB4 decimal = 50.5 / 2;

    funcion calcularMultiplicacionB2 entero (e1 entero, f2 entero){
        resultadoB entero = e1 * f2;
        mostrar(resultadoB);
        retorna resultadoB;
    }

    funcion calcularPromedioB2 decimal (totalB2 decimal, cantidadB2 decimal){
        promedioB decimal = totalB2 / cantidadB2;
        mostrar(promedioB);
        retorna promedioB;
    }

    funcion calcularPromedioB3 decimal (z numero){
        sumaB32 entero = 0;
        for (k entero = 0; k < 10000; k++) {
            sumaB32 = sumaB32 + k;
            mostrar(sumaB32);
        }
        retorna 0.0;
    }

    calcularPromedioB2(3.34,4.43);

    contadorC entero = 0;
    sumaC entero = 0;
    sumaC2 entero = 0;
    mensajeC cadena = "Procesando datos";
    es_validoC bool = verdadero;
    es_adminC bool = falso;
    
    contadorC2 entero = 0;
    sumaC3 entero = 0;
    sumaC4 entero = 0;
    mensajeC1 cadena = "Procesando datos";
    es_validoC2 bool = verdadero;

    mostrar(mensajeC);

    resultadoC1 entero = 8 + 6;
    resultadoC2 entero = 13 - 5;
    resultadoC3 entero = 7 * 10;
    resultadoC4 decimal = 35.0 / 7.0;

    mostrar(resultadoC1);
    mostrar(resultadoC2);
    mostrar(resultadoC3);
    mostrar(resultadoC4);

    totalC entero = resultadoC1 + resultadoC2;
    totalC2 entero = resultadoC3 * resultadoC1;
    mostrar(totalC);

    if(es_validoC){
        mensajeC cadena = "Sesion activa";
        mostrar(mensajeC);

        if(es_adminC){
            mostrar("Modo administrador");
        } else {
            mostrar("Modo usuario");
        }
    }

    for (l entero = 0; l < 19; l++) {
        sumaC = sumaC + l;
        mostrar(sumaC);
    }

    while(sumaC < 20){
        sumaC++;
        mostrar(sumaC);
    }

    funcion calcularMultiplicacionC entero (g entero, h entero){
        resultadoC entero = g * h;
        mostrar(resultadoC);
        retorna resultadoC;
    }

    funcion calcularPromedioC decimal (totalC decimal, cantidadC decimal){
        promedioC decimal = totalC / cantidadC;
        mostrar(promedioC);
        retorna promedioC;
    }

    calcularMultiplicacionC(7, 9);
    calcularPromedioC(38.8, 8.0);

    funcion esParFuncC bool (numeroC entero){
        if(numeroC > 0){
            retorna verdadero;
        } else {
            retorna falso;
        }
    }

    parC bool = verdadero;
    if(parC){
        mostrar("La cifra es par");
    } else {
        mostrar("La cifra es impar");
    }

    for (w entero = 0; w < 10000; w++) {
        sumaC2 = sumaC2 + w;
        mostrar(sumaC2);
    }

numeroC21 entero = 51;
numeroC22 entero = 52;
numeroC23 entero = 53;
numeroC24 entero = 54;
numeroC25 entero = 55;

resultadonumeroC entero = 51+52;
resultadonumeroC1 entero = 52-51;
resultadonumeroC2 entero = 53*54;
resultadonumeroC3 entero = 55+55;
resultadonumeroC4 decimal = 60.5 / 2;

    funcion calcularMultiplicacionC2 entero (g1 entero, h2 entero){
        resultadoC entero = g1 * h2;
        mostrar(resultadoC);
        retorna resultadoC;
    }

    funcion calcularPromedioC2 decimal (totalC2 decimal, cantidadC2 decimal){
        promedioC decimal = totalC2 / cantidadC2;
        mostrar(promedioC);
        retorna promedioC;
    }

    funcion calcularPromedioC3 decimal (w numero){
        sumaC32 entero = 0;
        for (l entero = 0; l < 19; l++) {
            sumaC32 = sumaC32 + l;
            mostrar(sumaC32);
        }
        retorna 0.0;
    }

    calcularPromedioC2(4.45,5.54);

    contadorD entero = 0;
    sumaD entero = 0;
    sumaD2 entero = 0;
    mensajeD cadena = "Inicio de rutina D";
    es_validoD bool = verdadero;
    es_adminD bool = falso;

    contadorD2 entero = 0;
    sumaD3 entero = 0;
    sumaD4 entero = 0;
    mensajeD1 cadena = "Inicio de rutina D extra";
    es_validoD2 bool = verdadero;

    mostrar(mensajeD);

    resultadoD1 entero = 9 + 3;
    resultadoD2 entero = 15 - 6;
    resultadoD3 entero = 4 * 11;
    resultadoD4 decimal = 44.0 / 4.0;

    mostrar(resultadoD1);
    mostrar(resultadoD2);
    mostrar(resultadoD3);
    mostrar(resultadoD4);

    totalD entero = resultadoD1 + resultadoD2;
    totalD2 entero = resultadoD3 * resultadoD1;
    mostrar(totalD);

    funcion factorial entero(n entero) {
        resultadoF entero = 1;
        for (i entero = 1; i <= n; i++) {
            resultadoF = resultadoF * i;
        }
        retorna resultadoF;
    }

    mostrar(factorial(5));

    if(es_validoD){
        mensajeD cadena = "Usuario D verificado";
        mostrar(mensajeD);

        if(es_adminD){
            mostrar("Acceso D completo");
        } else {
            mostrar("Acceso D restringido");
        }
    }

    for (m entero = 0; m < 15; m++) {
        sumaD = sumaD + m;
        mostrar(sumaD);
    }

    while(sumaD < 30){
        sumaD++;
        mostrar(sumaD);
    }

    funcion calcularMultiplicacionD entero (i entero, j entero){
        resultadoD entero = i * j;
        mostrar(resultadoD);
        retorna resultadoD;
    }

    funcion calcularPromedioD decimal (totalD decimal, cantidadD decimal){
        promedioD decimal = totalD / cantidadD;
        mostrar(promedioD);
        retorna promedioD;
    }

    calcularMultiplicacionD(8, 6);
    calcularPromedioD(48.0, 8.0);

    funcion esImparFuncD bool (numeroD entero){
        if(numeroD ){
            retorna verdadero;
        } else {
            retorna falso;
        }
    }

    imparD bool = esImparFuncD(7);
    if(imparD){
        mostrar("El numero es impar");
    } else {
        mostrar("El numero es par");
    }

    for (n entero = 0; n < 5000; n++) {
        sumaD2 = sumaD2 + n;
        mostrar(sumaD2);
    }

    numeroD21 entero = 61;
    numeroD22 entero = 62;
    numeroD23 entero = 63;
    numeroD24 entero = 64;
    numeroD25 entero = 65;

    resultadonumeroD entero = 61+62;
    resultadonumeroD1 entero = 62-61;
    resultadonumeroD2 entero = 63*64;
    resultadonumeroD3 entero = 65+65;
    resultadonumeroD4 decimal = 70.5 / 2;

    funcion calcularMultiplicacionD2 entero (i1 entero, j2 entero){
        resultadoD entero = i1 * j2;
        mostrar(resultadoD);
        retorna resultadoD;
    }

    funcion calcularPromedioD2 decimal (totalD2 decimal, cantidadD2 decimal){
        promedioD decimal = totalD2 / cantidadD2;
        mostrar(promedioD);
        retorna promedioD;
    }

    funcion calcularPromedioD3 decimal (n numero){
        sumaD32 entero = 0;
        for (m entero = 0; m < 5000; m++) {
            sumaD32 = sumaD32 + m;
            mostrar(sumaD32);
        }
        retorna 0.0;
    }

    calcularPromedioD2(5.55,6.66);

    contadorE entero = 0;
    sumaE entero = 0;
    sumaE2 entero = 0;
    mensajeE cadena = "Inicio de rutina E";
    es_validoE bool = verdadero;
    es_adminE bool = falso;

    contadorE2 entero = 0;
    sumaE3 entero = 0;
    sumaE4 entero = 0;
    mensajeE1 cadena = "Inicio de rutina E extra";
    es_validoE2 bool = verdadero;

    mostrar(mensajeE);

    resultadoE1 entero = 10 + 2;
    resultadoE2 entero = 18 - 7;
    resultadoE3 entero = 3 * 12;
    resultadoE4 decimal = 36.0 / 3.0;

    mostrar(resultadoE1);
    mostrar(resultadoE2);
    mostrar(resultadoE3);
    mostrar(resultadoE4);

    totalE entero = resultadoE1 + resultadoE2;
    totalE2 entero = resultadoE3 * resultadoE1;
    mostrar(totalE);

    if(es_validoE){
        mensajeE cadena = "Usuario E verificado";
        mostrar(mensajeE);

        if(es_adminE){
            mostrar("Acceso E completo");
        } else {
            mostrar("Acceso E restringido");
        }
    }

    for (p entero = 0; p < 10; p++) {
        sumaE = sumaE + p;
        mostrar(sumaE);
    }

    while(sumaE < 25){
        sumaE++;
        mostrar(sumaE);
    }

    funcion calcularMultiplicacionE entero (k entero, l entero){
        resultadoE entero = k * l;
        mostrar(resultadoE);
        retorna resultadoE;
    }

    funcion calcularPromedioE decimal (totalE decimal, cantidadE decimal){
        promedioE decimal = totalE / cantidadE;
        mostrar(promedioE);
        retorna promedioE;
    }

    calcularMultiplicacionE(9, 5);
    calcularPromedioE(45.0, 9.0);

    funcion esParFuncE bool (numeroE entero){
        if(numeroE ){
            retorna verdadero;
        } else {
            retorna falso;
        }
    }

    parE bool = esParFuncE(8);
    if(parE){
        mostrar("El numero es par");
    } else {
        mostrar("El numero es impar");
    }

    for (q entero = 0; q < 3000; q++) {
        sumaE2 = sumaE2 + q;
        mostrar(sumaE2);
    }

    numeroE21 entero = 71;
    numeroE22 entero = 72;
    numeroE23 entero = 73;
    numeroE24 entero = 74;
    numeroE25 entero = 75;

    resultadonumeroE entero = 71+72;
    resultadonumeroE1 entero = 72-71;
    resultadonumeroE2 entero = 73*74;
    resultadonumeroE3 entero = 75+75;
    resultadonumeroE4 decimal = 80.5 / 2;

    funcion calcularMultiplicacionE2 entero (k1 entero, l2 entero){
        resultadoE entero = k1 * l2;
        mostrar(resultadoE);
        retorna resultadoE;
    }

    funcion calcularPromedioE2 decimal (totalE2 decimal, cantidadE2 decimal){
        promedioE decimal = totalE2 / cantidadE2;
        mostrar(promedioE);
        retorna promedioE;
    }

    funcion calcularPromedioE3 decimal (q numero){
        sumaE32 entero = 0;
        for (p entero = 0; p < 3000; p++) {
            sumaE32 = sumaE32 + p;
            mostrar(sumaE32);
        }
        retorna 0.0;
    }

    calcularPromedioE2(6.66,7.77);

asd entero = 0;
limite entero = 10;

while (asd < limite) {
    mostrar(fibonacci(asd));
    asd++;
}

indiceFibo entero = 10;
limiteFibo entero = 30;

while (indiceFibo < limiteFibo) {
    mostrar(fibonacci(indiceFibo));
    indiceFibo++;
}

for (iF entero = 30; iF < 50; iF++) {
    mostrar(fibonacci(iF));
}

jF entero = 50;
while (jF <= 60) {
    mostrar(fibonacci(jF));
    jF = jF + 2;
}

funcion sumaRecursiva entero(n entero) {
    if (n == 0) {
        retorna 0;
    } else {
        retorna n + sumaRecursiva(n - 1);
    }
}

funcion productoRecursivo entero(n entero, m entero) {
    if (m == 0) {
        retorna 0;
    } else {
        retorna n + productoRecursivo(n, m - 1);
    }
}

funcion potenciaRecursiva entero(base entero, exp entero) {
    if (exp == 0) {
        retorna 1;
    } else {
        retorna base * potenciaRecursiva(base, exp - 1);
    }
}

funcion cuentaAtras entero(n entero) {
    if (n == 0) {
        retorna 0;
    } else {
        mostrar(n);
        retorna cuentaAtras(n - 1);
    }
}

funcion combinatoria entero(n entero, k entero) {
    if (k == 0 || k == n) {
        retorna 1;
    } else {
        retorna combinatoria(n - 1, k - 1) + combinatoria(n - 1, k);
    }
}

asd2 entero = 0;
limite2 entero = 10000;

while (asd2 < limite2) {
    mostrar(fibonacci(asd2 % 30)); 
    asd2++;
}

indiceFibo2 entero = 10000;
limiteFibo2 entero = 20000;

while (indiceFibo2 < limiteFibo2) {
    mostrar(fibonacci(indiceFibo2 % 30));
    indiceFibo2++;
}

for (iF2 entero = 20000; iF2 < 30000; iF2++) {
    mostrar(fibonacci(iF2 % 30));
}

jF2 entero = 30000;
while (jF2 <= 40000) {
    mostrar(fibonacci(jF2 % 30));
    jF2 = jF2 + 2;
}


mostrar(sumaRecursiva(5000));
mostrar(productoRecursivo(100, 50));
mostrar(potenciaRecursiva(2, 20));
cuentaAtras(1000);
mostrar(combinatoria(20, 10));


for (x2 entero = 0; x2 < 10000; x2++) {
    mostrar(sumaRecursiva(x2 % 20));
}

for (y2 entero = 0; y2 < 10000; y2++) {
    mostrar(productoRecursivo(y2 % 10, 10));
}

for (z2 entero = 0; z2 < 10000; z2++) {
    mostrar(potenciaRecursiva(3, z2 % 10));
}

for (w2 entero = 0; w2 < 10000; w2++) {
    mostrar(combinatoria(10, w2 % 10));
}


sumaExtra1 entero = 0;
for (a entero = 0; a < 10000; a++) {
    sumaExtra1 = sumaExtra1 + a;
    mostrar(sumaExtra1);
}

sumaExtra2 entero = 0;
for (b entero = 0; b < 10000; b++) {
    sumaExtra2 = sumaExtra2 + b;
    mostrar(sumaExtra2);
}

sumaExtra3 entero = 0;
for (c entero = 0; c < 10000; c++) {
    sumaExtra3 = sumaExtra3 + c;
    mostrar(sumaExtra3);
}

sumaExtra4 entero = 0;
for (d entero = 0; d < 10000; d++) {
    sumaExtra4 = sumaExtra4 + d;
    mostrar(sumaExtra4);
}

}